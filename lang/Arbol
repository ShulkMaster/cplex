compilationUnitA ::=externalDeclaration compilationUnitA
externalDeclaration ::= declarationSpecifiers Identifier declaratorPrime
declaratorPrime ::= initDeclaratorListPrime initializer Semi
declaratorPrime ::= LeftParen functionDefinition

compilationUnitA::=''

initDeclaratorListPrime ::= Comma Identifier initDeclaratorListPrime
initDeclaratorListPrime ::= ''

declarationSpecifiers ::= declarationSpecifier declarationSpecifiersPrime

declarationSpecifiersPrime ::= ''
declarationSpecifiersPrime ::= declarationSpecifiers

declarationSpecifier ::= Const
declarationSpecifier ::= Static
declarationSpecifier ::= typeSpecifier

typeSpecifier ::= Char
typeSpecifier ::= Int
typeSpecifier ::= Bool

initializer ::= Assign initializerList
initializer ::= ''

initializerList ::= LeftBrace Constant RightBrace
initializerList ::= expression

functionDefinition ::= declaration fD1
functionDefinition ::= RightParen fD1

fD1 ::= compoundStatement
fD1 ::= Semi

declaration ::= declarationSpecifiers Identifier declarationPrime
declarationPrime ::= Comma declaration
declarationPrime ::= RightParen

FuncDeclaration ::= declarationSpecifiers Identifier FuncDeclarationPrime
FuncDeclarationPrime ::= Comma FuncDeclaration
FuncDeclarationPrime ::= initializer Semi

compoundStatement ::= LeftBrace bI RightBrace

bI ::= ''
bI ::= blockItemList

blockItemList ::= blockItem bI

blockItem ::= FuncDeclaration
blockItem ::= statement

statementPrime ::= statement statementPrime
statementPrime ::= ''
statementPrime ::= FuncDeclaration

statement ::= iterationStatement
statement ::= compoundStatement
statement ::= expressionStatement
statement ::= selectionStatement
statement ::= Return expressionStatement

iterationStatement ::= For LeftParen forCondition RightParen LeftBrace statementPrime RightBrace

forCondition ::= forDeclaration assignmentExpression Semi assignmentExpression

forDeclaration ::= FuncDeclaration

assignmentExpression ::= conditionalExpression
expressionStatement ::= expression Semi

expression ::= conditionalExpression expressionPrime
expressionPrime ::= Comma conditionalExpression expressionPrime
expressionPrime ::= ''

conditionalExpression ::= logicalOrExpression conditionalExpressionPrime
conditionalExpressionPrime ::= Question expression Colon conditionalExpression
conditionalExpressionPrime ::= ''

logicalOrExpression ::= logicalAndExpression logicalOrExpressionPrime
logicalOrExpressionPrime ::= OrOr logicalAndExpression logicalOrExpressionPrime
logicalOrExpressionPrime ::= ''

logicalAndExpression ::= inclusiveOrExpression logicalAndExpressionPrime
logicalAndExpressionPrime ::= AndAnd inclusiveOrExpression logicalAndExpressionPrime
logicalAndExpressionPrime ::= ''

inclusiveOrExpression ::= exclusiveOrExpression inclusiveOrExpressionPrime
inclusiveOrExpressionPrime ::= Or exclusiveOrExpression inclusiveOrExpressionPrime
inclusiveOrExpressionPrime ::= ''

exclusiveOrExpression ::= andExpression exclusiveOrExpressionPrime
exclusiveOrExpressionPrime ::= Caret andExpression exclusiveOrExpressionPrime
exclusiveOrExpressionPrime ::= ''

andExpression ::= equalityExpression andExpressionPrime
andExpressionPrime ::= And equalityExpression andExpressionPrime
andExpressionPrime ::= ''

equalityExpression ::= relationalExpression equalityExpressionPrime
equalityExpressionPrime ::= Equal relationalExpression equalityExpressionPrime
equalityExpressionPrime ::= NotEqual relationalExpression equalityExpressionPrime
equalityExpressionPrime ::= ''

relationalExpression ::= shiftExpression relationalExpressionPrime
relationalExpressionPrime ::= Less shiftExpression relationalExpressionPrime
relationalExpressionPrime ::= Greater shiftExpression relationalExpressionPrime
relationalExpressionPrime ::= LessEqual shiftExpression relationalExpressionPrime
relationalExpressionPrime ::= GreaterEqual shiftExpression relationalExpressionPrime
relationalExpressionPrime ::= ''

shiftExpression ::= additiveExpression shiftExpressionPrime
shiftExpressionPrime ::= LeftShift additiveExpression shiftExpressionPrime
shiftExpressionPrime ::= RightShift additiveExpression shiftExpressionPrime
shiftExpressionPrime ::= ''

additiveExpression ::= multiplicativeExpression additiveExpressionPrime
additiveExpressionPrime ::= Plus multiplicativeExpression additiveExpressionPrime
additiveExpressionPrime ::= Minus multiplicativeExpression additiveExpressionPrime
additiveExpressionPrime ::= ''

multiplicativeExpression ::= castExpression multiplicativeExpression
multiplicativeExpression ::= Star castExpression multiplicativeExpression
multiplicativeExpression ::= Div castExpression multiplicativeExpression
multiplicativeExpression ::= Mod castExpression multiplicativeExpression
multiplicativeExpression ::= ''

castExpression ::= unaryExpression
castExpression ::= constanExpression
castExpression ::= Identifier invokeExpression

invokeExpression ::= LeftParen expression RightParen
invokeExpression ::= ''

constanExpression ::= Constant
constanExpression ::= DigitSequence
constanExpression ::= True
constanExpression ::= False
constanExpression ::= StringLiteral

unaryExpression ::= unaryExpressionPrime unaryExpressionAlpha

unaryExpressionAlpha ::= unaryOperator castExpression
unaryExpressionAlpha ::= typeSpecifier

unaryExpressionPrime ::= PlusPlus
unaryExpressionPrime ::= MinusMinus

unaryOperator ::= Plus
unaryOperator ::= Minus

selectionStatement ::= If LeftParen expression RightParen compoundStatement selectionStatementPrime
selectionStatementPrime ::= Else statement
selectionStatementPrime ::= ''

